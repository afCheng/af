{"version":3,"sources":["webpack:///src/components/enterable/direct/DirectStart.vue","webpack:///./src/components/enterable/direct/DirectStart.vue?7251","webpack:///./src/components/enterable/direct/DirectStart.vue"],"names":["DirectStart","videoPlayer","vue_video_player","_this","this","getAnswerNum","checkRecordNum","timer","videoDuration","i","index","host","maxPlay_path","Date","date","countDownTime","s","time","_this2","showTitleIndex","then","response","data","description","self","id","goNext","timeDown","sendStatus","original_file","ii","limit","_self","atime","getAllScore","getRank","overDrill","leftTime","showTitleA","endTime","design_status","project_id","str","_this3","duration","design_location","end_time","_i","step","getMaterial","getSubject","node_name","videoArr","picArr","problem","_this4","length","groupLists","name","answer","arr","_i3","arrResult","_this5","showReference","res","aid","_this6","_this7","pid","_this8","score","_this9","val","user_name","_this11","_i6","user_id","arrID","_this12","_this13","getPullFlow","error","_this14","pullKey","direct_DirectStart","render","_vm","_h","$createElement","_c","directives","rawName","value","$store","state","expression","staticClass","attrs","element-loading-text","loadingText","_l","item","keys","key","class","_v","_s","isLastLink","_e","on","click","$event","openBig","end","downloadDrillText","showBigTitle","style","showClock","showRightBtn","type","showClick","hiddenClick","videoMaterial","pictureMaterial","textMaterial","staticStyle","opacity","muted","controls","autoplay","width","height","domProps","src","file_path","margin-top","options","videoOptions1","subject","describe","text-align","font-size","color","answerCount","_m","font-weight","scoreCount","liRandomColor","showReferenceDetail","show","clickAnswerDetail","videoOptions","_f","float","alt","text-inside","stroke-width","percentage","group_score","scoreTotal","status","margin-left","margin-right","rankIndex","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/8.378b0ba4798c818416df.js","sourcesContent":["<template>\n    <div class=\"direct_start\" v-loading=\"$store.state.loading\"\n         :element-loading-text=\"loadingText\">\n        <div class=\"direct_title\">\n            <ul>\n                <!--顶部灰色title是否可以点击-->\n                <!--<li :class=\"showTitleA == item ? 'startDirectA': ''\" v-for=\"(item,keys) in linkTitleDetail\" :key=\"keys\" @click=\"chooseDetail(item,keys)\">{{ item }}</li>-->\n                <li :class=\"showTitleA == item ? 'startDirectA': ''\" v-for=\"(item,keys) in linkTitleDetail\" :key=\"keys\">{{ item }}</li>\n                <li v-if=\"!isLastLink\">下一环节</li>\n                <li :class=\"showTitleA == '结束演练' ? 'startDirectA': ''\" v-if=\"isLastLink\">结束演练</li>\n            </ul>\n            <div>\n                <el-button @click=\"openBig()\">打开投影页面</el-button>\n                <el-button @click=\"goNext()\" v-if=\"!end\">下一步</el-button>\n                <el-button @click=\"downloadDrillText()\" v-if=\"end\">下载文档</el-button>\n            </div>\n        </div>\n        <div class=\"direct_link\">\n            <ul>\n                <li :class=\"[showBigTitle == index ? 'directLinkActive': '',index < showBigTitle ? 'directLinkEnd': '']\"\n                    v-for=\"(item,index) in node\" :key=\"index\">{{ item.name }}<span></span></li>\n            </ul>\n            <div class=\"clock\" :style=\"showClock ? 'display: inline-block': 'display:none'\">\n                <div class=\"clock-box\">\n                    <i class=\"iconfont el-icon-emergency-daojishi\"></i>\n                    <span>{{ time }}</span>\n                </div>\n            </div>\n            <div class=\"referenceBtn\" :style=\"showRightBtn ? 'display: inline-block;': 'display: none'\" v-if=\"showRightBtn\">\n                <el-button type=\"primary\" v-if=\"showReference\" @click=\"showClick()\">显示参考答案</el-button>\n                <el-button type=\"primary\" v-if=\"!showReference\" @click=\"hiddenClick()\">隐藏参考答案</el-button>\n            </div>\n        </div>\n        <div class=\"direct_main\" :style=\"[showTitleA == '展示得分' ? 'background-color: #fff' : 'background-color: #f1f1f1;',showTitleA == '结束演练' ? 'background-color: #fff' : 'background-color: #f1f1f1;',]\">\n            <!--播放素材-->\n            <div class=\"material_play1\" v-if=\"showTitleA == '播放素材'\">\n              <h3>请观看素材</h3>\n              <p class=\"textMaterial\" v-if=\"videoMaterial == ''&&pictureMaterial == ''\">{{ textMaterial }}</p>\n              <div class=\"play_video\" v-if=\"videoMaterial != ''\">\n                  <video id=\"video\" style=\"opacity: 0\" muted controls autoplay width=\"0\" height=\"0\">\n                      <source :src=\"$store.state.file_path + videoMaterial\" type=\"video/ogg\" />\n                  </video>\n                  <video-player style=\"margin-top: 10px;\" :options=\"videoOptions1\"></video-player>\n              </div>\n              <div class=\"show_img\" v-if=\"pictureMaterial != ''\">\n                <img :src=\"$store.state.file_path + pictureMaterial\">\n              </div>\n            </div>\n            <!--播放题目 开始答题-->\n            <div class=\"subject_play\" v-if=\"showTitleA == '播放题目'||showTitleA == '开始答题'\">\n                <h3>请阅读下列题目</h3>\n                <p>本题 {{ subject.score }} 分</p>\n                <div>{{ subject.describe }}</div>\n            </div>\n            <div v-if=\"showTitleA == '开始答题'\" style=\"text-align: center;font-size: 24px;color: #4a4a4a;\n                margin-top: 20px;\"><span style=\"color: #f00;\">{{ answerCount }}</span>人已经完成答题!</div>\n            <!--开始打分-->\n            <div class=\"start_score\" v-if=\"showTitleA == '开始打分'\">\n                正在打分中\n                <div class=\"loading\">\n                    <div class=\"object\" id=\"object_one\"></div>\n                    <div class=\"object\" id=\"object_two\"></div>\n                    <div class=\"object\" id=\"object_three\"></div>\n                </div>\n            </div>\n            <div v-if=\"showTitleA == '开始打分'\" style=\"text-align: center;font-size: 24px;color: #4a4a4a;\n                font-weight: 500;\"><span style=\"color:#f00;\">{{ scoreCount }}</span> 位评分人已经完成打分!</div>\n            <!--参考答案-->\n            <div class=\"show_reference\" :style=\"'border-left: 5px solid ' + liRandomColor(4)\" v-if=\"!showReference&&(showTitleA == '显示所有组答案'||showTitleA == '开始打分')\" >\n              <div class=\"reference_title\">参考答案</div>\n              <div class=\"reference_content\">\n                <div :class=\"showReferenceDetail ? '': 'showAllReferenceContent'\">\n                  <span>{{ subject.answer }}</span>\n                </div>\n                <!--<span :class=\"showReferenceDetail ? '': 'showAllReferenceContent'\">{{ subject.answer }}</span>-->\n                <p class=\"answer_detail\" v-if=\"!showReferenceDetail\" @click=\"showReferenceDetail = true\"><span>显示全部详情>></span></p>\n                <p class=\"answer_detail\" v-if=\"showReferenceDetail\" @click=\"showReferenceDetail = false\"><span>隐藏全部详情>></span></p>\n              </div>\n            </div>\n            <!--显示所有参演组答案--><!--开始点评--><!--开始打分-->\n            <!--v-if=\"showTitleA == '显示所有组答案'||showTitleA == '开始点评'||showTitleA == '开始打分'\"-->\n            <ul class=\"all_answer\" v-if=\"showTitleA == '显示所有组答案'||showTitleA == '开始打分'\">\n              <li v-for=\"(item,index) in allAnswer\" :key=\"index\" :style=\"'border-left: 5px solid ' + liRandomColor(index)\">\n                <div class=\"group_name\">{{ item.name }}</div>\n                <div class=\"answer\">\n                  <div :class=\"item.show ? 'answer_roughly': ''\">\n                    <span>{{ item.answer }}</span>\n                  </div>\n                  <p class=\"answer_detail\" v-if=\"item.show\"><span @click=\"clickAnswerDetail(item.id,item.show)\">显示全部详情>></span></p>\n                  <p class=\"answer_detail\" v-if=\"!item.show\"><span @click=\"clickAnswerDetail(item.id,item.show)\">隐藏全部详情>></span></p>\n                </div>\n              </li>\n            </ul>\n            <!--开始点评-->\n            <div class=\"start_comment\" v-if=\"showTitleA == '开始点评'\">\n              <video-player :options=\"videoOptions\"></video-player>\n            </div>\n            <!--展示得分-->\n            <div class=\"get_score\" v-if=\"showTitleA == '展示得分'\">\n              <div class=\"score_title\">得分排行榜</div>\n              <p class=\"score_link\">本环节得分</p>\n              <ul class=\"score_group\">\n                <li v-for=\"(item,index) in scoreLinkGroup\" :key=\"index\">\n                  <p>{{ item.name }}</p>\n                  <span>{{ item.score | markStatus }}分</span>\n                </li>\n              </ul>\n              <h3>本次演练总排名</h3>\n              <div class=\"score_main\">\n                <div class=\"every_group\" v-for=\"(item,index) in allScoreRank\" :key=\"index\">\n                    <div style=\"float: left;\">\n                        <img :src=\"item.src\" alt=\"\">\n                        <span class=\"ranking\">第 <b>{{ index + 1 }}</b> 名</span>\n                        <!--<span class=\"bac\" :style=\"'min-width:60px; width:' + item.group_score * 3 + 'px'\">{{ item.group_score }}分</span>-->\n                        <!--<span class=\"bac\" :style=\"'min-width:60px; width:' + (item.group_score/scoreTotal * 300) + 'px'\">{{ item.group_score }}分</span>-->\n                        <span class=\"group_name\">{{ item.name }}</span>\n                    </div>\n                    <div style=\"float: right;width: 400px;\">\n                        <el-progress :text-inside=\"true\" :stroke-width=\"18\" :percentage=\"(item.group_score/scoreTotal)*100\" status=\"success\"></el-progress>\n                        <span style=\"margin-left: 10px;margin-right: 0px;margin-top: 6px;\">{{ item.group_score | markStatus }}分</span>\n                    </div>\n                </div>\n              </div>\n            </div>\n            <!--结束演练-->\n            <div class=\"over_drill\" v-if=\"showTitleA == '结束演练'\">\n              <div class=\"over_drill_title\">本次演练结束</div>\n              <div class=\"the_fourth\">前{{ rankIndex }}甲</div>\n              <div class=\"score_main\">\n                  <div class=\"every_group\" v-for=\"(item,index) in allScoreRank\" :key=\"index\" v-if=\"index<4\">\n                      <div style=\"float: left;\">\n                          <img :src=\"item.src\" alt=\"\">\n                          <span class=\"ranking\">第 <b>{{ index + 1 }}</b> 名</span>\n                          <!--<span class=\"bac\" :style=\"'min-width:60px; width:' + (item.group_score/scoreTotal * 300) + 'px'\">{{ item.group_score }}分</span>-->\n                          <span class=\"group_name\">{{ item.name }}</span>\n                      </div>\n                      <div style=\"float: right;width: 400px;\">\n                          <el-progress :text-inside=\"true\" :stroke-width=\"18\" :percentage=\"(item.group_score/scoreTotal)*100\" status=\"success\"></el-progress>\n                          <span style=\"margin-left: 10px;margin-right: 0;margin-top: 6px;\">{{ item.group_score | markStatus}}分</span>\n                      </div>\n                  </div>\n              </div>\n          </div>\n        </div>\n    </div>\n</template>\n\n<script>\n  import 'video.js/dist/video-js.css'\n  import { videoPlayer } from 'vue-video-player'\nexport default {\n    components: {//观看直播组件\n      videoPlayer\n    },\n    data(){\n        return{\n            loadingText:'',         //loading文案\n            project_id: '',         //演练项目id\n            design_status: {\n                  node_id: '',      //环节id\n                  step: '',         //当前环节下的步骤\n                  end_time: '',     //当前步骤结束的时间（可以为空）\n            },                      //演练当前进行的状态（发送状态）\n            groupLists: [],         //分组\n            //大环节\n            node: [],             //所有环节的数组\n            showBigTitle: '0',    //当前进行的大环节的数组下标\n            //灰色顶部title步骤\n            linkTitleDetail: [],        //该环节的步骤\n            showTitleA: '播放素材',       //当前步骤\n            showTitleIndex: '0',        //当前步骤的标题数组下标编号\n            isLastLink: false,          //是否是最后一个环节\n            end: false,                 //演练结束(下一步按钮 还是 下载文档)\n            //倒计时 参考答案 按钮等\n            showClock: false,            //显示倒计时\n            showRightBtn: false,         //显示右上角参考答案按钮\n            showReference: true,        //显示参考答案\n            showReferenceDetail: false, //显示参考答案详情\n            textMaterial: '',           //文字素材\n            videoMaterial: '',          //视频素材\n            pictureMaterial: '',        //图片素材\n\t\t\tvideoOptions1: {//观看视频参数  IE10不兼容  改用这个\n\t\t\t\tmuted: false,\n\t\t\t\tlanguage: 'en',\n\t\t\t\tautoplay: true,\n\t\t\t\tsources: [{\n\t\t\t\t\ttype: \"video/mp4\",\n\t\t\t\t\tsrc: \"\"\n\t\t\t\t}],\n\t\t\t},\n            //题目\n            subject: {\n                  id: '',\n                  score: \"\",    //分数\n                  describe: \"\", //题目内容\n                  answer: '',   //参考答案\n            },\n            //所有参演组答案\n            allAnswer: [],\n            //展示得分\n            scoreTotal: 0,       //演练总分\n            scoreLinkGroup: [],  //当前环节得分\n            allScoreRank: [],    //排名\n            rankIndex: '',       //前n 甲\n            //倒计时\n            timeAnswer: '',     //获取已经答题人数的定时器\n            answerCount: 0,     //已经答题的人数\n            scoreTime: '',      //获取已经评分人数的定时器\n            scoreCount: 0,      //已经评分人数\n\t\t\tvideoDuration: '',  //视频时间\n            server_time: '',    //服务器时间\n            countDownTime: 0,   //获取到的倒计时时间\n            timer: '',          //倒计时定时器\n            endTime : '',       //结束时间\n            time : '',          //显示的倒计时时间\n            flag : false,       //是否结束倒计时\n            videoOptions: {//观看直播参数\n              sources: [\n              \t{\n              \t\ttype: \"rtmp/mp4\",\n    //                src: \"rtmp://pili-live-rtmp.jiaxingyanlian.com/emergency-drill/php-sdk-test1517368506\",\n                    src: \"\",\n\n                }\n              ],\n              techOrder:['flash'],\n              language: 'zh-CN',\n              live: true,\n              autoplay: true,\n\t            poster:\"./static/waitingLive.jpeg\",\n              height: 1000\n            },\n        }\n    },\n    created () {\n        this.$store.state.showHeader = '3';\n        this.$store.state.loading = true;\n        this.project_id = localStorage['drill_project'];\n        this.getLinkDrill();    //获取环节并获取演练状态\n        this.getGroupList();    //获取分组\n\n    },\n    mounted(){\n\t\tthis.timeAnswer = setInterval(()=>{\n\t\t\tif(this.showTitleA == '开始答题'){\n\t\t\t\tthis.getAnswerNum();\n            }\n\t\t},2000);\n\t\tthis.scoreTime = setInterval(()=>{\n\t\t\tif(this.showTitleA == '开始打分'){\n\t\t\t\tthis.checkRecordNum();\n            } else if(this.showTitleA == '开始点评'){\n\t\t\t\tthis.videoOptions.sources[0].src = \"rtmp://pili-live-rtmp.jiaxingyanlian.com/emergency-drill/php-sdk-test1517368506\" ;\n//\t\t\t\tconsole.log(this.videoOptions.sources[0])\n            }\n\t\t},2000);\n\n    },\n\n\tbeforeDestroy(){\n\t\tclearInterval(this.timer);\n\t},\n    methods:{\n        //选择环节进行的内容\n        chooseDetail(val,index){},\n        //获取素材视频时长\n        getVideoLong(){\n            let i = setInterval(function() {\n                let video = document.getElementById('video');\n                //console.log(video.readyState);\n                if(video.readyState > 0) {\n//                    var minutes = parseInt(video.duration / 60, 10);\n//                    var seconds = video.duration % 60;\n                    this.videoDuration = video.duration * 1000;\n                    console.log(this.videoDuration);\n                    // (Put the minutes and seconds in the display)\n                    clearInterval(i);\n                }\n            }, 200);\n        },\n//\t\t//获取服务器时间\n//\t\tgetServerTime(){\n//\t\t\tthis.$axios.post('/api/time-end')\n//\t\t\t\t.then((response)=>{\n//\t\t\t\t\tthis.server_time = this.NewDate(response.data.data);\n//\t\t\t\t}).catch((err)=>{})\n//\t\t},\n\n        /************使用的******************/\n        //全部答案li左边框随机色\n        liRandomColor(index){\n            let colorLists = [\"#f2c840\", \"#50e3c2\", \"#e38df5\", \"#80c6f7\", \"#a1eaff\",\"#f2c840\", \"#50e3c2\", \"#e38df5\", \"#80c6f7\", \"#a1eaff\",\n\t            \"#f2c840\", \"#50e3c2\", \"#e38df5\", \"#80c6f7\", \"#a1eaff\",\"#f2c840\", \"#50e3c2\", \"#e38df5\", \"#80c6f7\", \"#a1eaff\",\n\t            \"#f2c840\", \"#50e3c2\", \"#e38df5\", \"#80c6f7\", \"#a1eaff\",\"#f2c840\", \"#50e3c2\", \"#e38df5\", \"#80c6f7\", \"#a1eaff\"];\n//            return colorLists[Math.floor(Math.random()*colorLists.length)];\n\t        return colorLists[index];\n        },\n        //打开大屏\n        openBig(){\n            let host = window.location.host;\n            window.open('http://' + host + this.$store.state.maxPlay_path);\n        },\n\t    //格式化时间\n\t    NewDate(str) {\n\t\t    //首先将日期分隔 ，获取到日期部分 和 时间部分\n\t\t    var day = str.split(' ');\n\t\t    //获取日期部分的年月日\n\t\t    var days = day[0].split('-');\n\t\t    //获取时间部分的 时分秒\n\t\t    var mi = day[day.length - 1].split(':');\n\t\t    //获取当前date类型日期\n\t\t    var date = new Date();\n\t\t    //给date赋值  年月日\n\t\t    date.setUTCFullYear(days[0], days[1] - 1, days[2]);\n\t\t    //给date赋值 时分秒  首先转换utc时区 ：+8\n\t\t    date.setUTCHours(mi[0] - 8, mi[1], mi[2]);\n\t\t    return date;\n\t    },\n        //倒计时\n        timeDown () {\n            let leftTime = parseInt(this.countDownTime);\n            //let d = parseInt(leftTime/(24*60*60));\n            //let h = this.formate(parseInt(leftTime/(60*60)%24));\n            let m = this.formate(parseInt(leftTime/60%60));\n            let s = this.formate(parseInt(leftTime%60));\n            this.showClock = true;\n            if(leftTime <= 0){\n                this.flag = true;\n                this.$emit('time-end');\n            }\n            if(leftTime < 0 ){\n              this.showClock = false;\n            }\n            this.time = `${m}:${s}`;\n\t\t\tthis.countDownTime--;\n        },\n        formate (time) {\n            if(time>=10){\n                return time\n            }else{\n                return `0${time}`\n            }\n        },\n        //下一步\n        goNext(){\n            this.$store.state.loading = true;\n\t\t\tthis.countDownTime = 0;\n            this.loadingText = '';\n            //先判断在第几环节  如果没到最后一环节\n            if(this.showBigTitle < this.node.length-1){\n                //如果环节步骤内容没有到最后一项\n                this.isLastLink = false;    //不显示结束演练\n                if(this.showTitleIndex < this.linkTitleDetail.length-1){\n                    this.showTitleIndex++;\n                } else {\n                    //当前为最后一项步骤时，再次点击后，开始下一环节的第一项\n                    this.showTitleIndex = 0;\n                    this.showBigTitle++;//下一环节\n                    //下环节的内容  根据下环节有无点评人来确认有没有点评环节，其余都一样\n                    if(this.node[this.showBigTitle].score_user){\n                        this.linkTitleDetail = [\"播放素材\",\"播放题目\",\"开始答题\",\"显示所有组答案\",\"开始点评\",\"开始打分\",\"展示得分\"];\n                    } else {\n                        this.linkTitleDetail = [\"播放素材\",\"播放题目\",\"开始答题\",\"显示所有组答案\",\"开始打分\",\"展示得分\"];\n                    }\n                    //如果此时进入的下环节是最后环节，显示结束演练\n                    if(this.showBigTitle == this.node.length -1){\n                        this.isLastLink = true;\n                    }\n                }\n                this.showTitleA = this.linkTitleDetail[this.showTitleIndex];\n                this.end = false;\n            } else {\n                //如果是最后环节   环节内容没有到最后一项\n                if(this.showTitleIndex < this.linkTitleDetail.length-1){\n                    this.showTitleIndex++;\n                    this.showTitleA = this.linkTitleDetail[this.showTitleIndex];\n                } else {\n                    //当前为最后一项时，再次点击后 进入结束演练\n                    this.showTitleIndex = 0;\n                    //this.showBigTitle++;\n                    this.showTitleA = '结束演练';\n                    this.end = true;    //显示下载文档按钮\n                }\n            }\n            this.$axios.post('/api/time-end')\n                .then((response)=>{\n                    let now = this.NewDate(response.data.data);\n                    let limit = '';         //限制时间\n                    let leftTime = '';      //结束时间\n                    if(this.showTitleA == '播放素材'){\n                    \tconsole.log(\"下1步播放素材\");\n\t\t\t\t\t\t//获取下环节的文字素材和文件素材\n\t\t\t\t\t\tthis.textMaterial = this.node[this.showBigTitle].description;\n\t\t\t            /****调取素材接口  判断是视频还是图片或者纯文字***/\n\t\t\t\t\t\tlet self = this;\n\t\t\t\t\t\tthis.$axios.post('/api/play-video',{\n\t\t\t\t\t\t\tnode_id: this.node[this.showBigTitle].id,\n\t\t\t\t\t\t}).then(function (response) {\n//\t\t\t\t\t\t\tconsole.log(response);\n\t\t\t\t\t\t\tif(response.data.data == null){\n                                //没有文件素材 就显示文字素材说明   //判断第一环节的播放素材是否有倒计时\n\t\t\t\t\t\t\t\tif(self.node[self.showBigTitle].a_time){\n\t\t\t\t\t\t\t\t\t//有倒计时 则显示倒计时 赋值倒计时时间并开始\n\t\t\t\t\t\t\t\t\tself.$axios.post('/api/time-end')\n\t\t\t\t\t\t\t\t\t\t.then((response)=>{\n\t\t\t\t\t\t\t\t\t\t\tlet now = self.NewDate(response.data.data);\n\t\t\t\t\t\t\t\t\t\t\tself.endTime = now.getTime() + self.node[self.showBigTitle].a_time*60*1000;\n\t\t\t\t\t\t\t\t\t\t\tself.countDownTime = self.node[self.showBigTitle].a_time*60\n                                            self.flag = false;\n\t\t\t\t\t\t\t\t\t\t\tself.timer = setInterval(()=>{\n\t\t\t\t\t\t\t\t\t\t\t\tif(self.flag == true){\n\t\t\t\t\t\t\t\t\t\t\t\t\tclearInterval(self.timer);//时间到\n\t\t\t\t\t\t\t\t\t\t\t\t\tself.goNext();\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tself.timeDown();\n\t\t\t\t\t\t\t\t\t\t\t},1000);\n\t\t\t\t\t\t\t\t\t\t\t//发送当前状态\n\t\t\t\t\t\t\t\t\t\t\tself.sendStatus();\n\t\t\t\t\t\t\t\t\t\t}).catch((err)=>{})\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t//没有倒计时 不显示\n\t\t\t\t\t\t\t\t\tself.showClock = false;\n\t\t\t\t\t\t\t\t\tclearInterval(self.timer);\n\t\t\t\t\t\t\t\t\tself.sendStatus();\n\t\t\t\t\t\t\t\t}\n                            } else {//有图片或者视频素材\n\t\t\t\t\t\t\t\tlet ImgType=[\"gif\", \"jpeg\", \"jpg\", \"bmp\", \"png\", 'webp', 'psd', 'svg', 'tiff'];//图片\n\t\t\t\t\t\t\t\tfor(let i in response.data.data){\n\t\t\t\t\t\t\t\t\tif(!RegExp(\"\\.(\" + ImgType.join(\"|\") + \")$\", \"i\").test(response.data.data[i].file_path.toLowerCase())){\n\t\t\t\t\t\t\t\t\t\t//如果是视频素材\n\t\t\t\t\t\t\t\t\t\tself.videoMaterial = response.data.data[i].original_file;\n\t\t\t\t\t\t\t\t\t\tself.videoOptions1.sources[0].src = self.$store.state.file_path + response.data.data[i].original_file;\n\t\t\t\t\t\t\t\t\t\t//判断第一环节的播放素材是否有倒计时\n\t\t\t\t\t\t\t\t\t\tif(self.node[self.showBigTitle].a_time){\n\t\t\t\t\t\t\t\t\t\t\t//重复获取视频时间  直到获得\n\t\t\t\t\t\t\t\t\t\t\tlet ii = setInterval(function() {\n\t\t\t\t\t\t\t\t\t\t\t\t//视频时长\n\t\t\t\t\t\t\t\t\t\t\t\tlet video = document.getElementById('video');\n//\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(video)\n\t\t\t\t\t\t\t\t\t\t\t\tif(video.readyState > 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tself.videoDuration = video.duration * 1000;\n\t\t\t\t\t\t\t\t\t\t\t\t\tclearInterval(ii);\n\t\t\t\t\t\t\t\t\t\t\t\t\t//计算目标时间\n\t\t\t\t\t\t\t\t\t\t\t\t\tlimit = self.node[self.showBigTitle].a_time *60*1000 + self.videoDuration;\n\t\t\t\t\t\t\t\t\t\t\t\t\tself.countDownTime = limit/1000;\n\t\t\t\t\t\t\t\t\t\t\t\t\tself.endTime = now.getTime() + limit;\n\t\t\t\t\t\t\t\t\t\t\t\t\tclearInterval(self.timer);\n\t\t\t\t\t\t\t\t\t\t\t\t\tself.flag = false;\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(self.endTime == ''){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclearInterval(self.timer);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tself.showClock = false;\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tself.timer = setInterval(()=>{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(self.flag == true){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclearInterval(self.timer);//时间到\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tself.goNext();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tself.timeDown();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},1000);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tself.sendStatus();\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}, 200);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t//视频素材 没有倒计时\n\t\t\t\t\t\t\t\t\t\t\tself.showClock = false;\n\t\t\t\t\t\t\t\t\t\t\tclearInterval(self.timer);\n\t\t\t\t\t\t\t\t\t\t\tself.endTime = '';\n\t\t\t\t\t\t\t\t\t\t\tself.flag = false;\n\t\t\t\t\t\t\t\t\t\t\tself.sendStatus();    //发送当前状态\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t//图片素材\n\t\t\t\t\t\t\t\t\t\tself.pictureMaterial = response.data.data[i].original_file;\n\t\t\t\t\t\t\t\t\t\t//判断第一环节的播放素材是否有倒计时\n\t\t\t\t\t\t\t\t\t\tif(self.node[self.showBigTitle].a_time){\n\t\t\t\t\t\t\t\t\t\t\t//显示倒计时 赋值倒计时时间并开始\n\t\t\t\t\t\t\t\t\t\t\tself.$axios.post('/api/time-end')\n\t\t\t\t\t\t\t\t\t\t\t\t.then((response)=>{\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet now = self.NewDate(response.data.data);\n\t\t\t\t\t\t\t\t\t\t\t\t\tself.countDownTime = self.node[self.showBigTitle].a_time*60;\n\t\t\t\t\t\t\t\t\t\t\t\t\tself.endTime = now.getTime() + self.node[self.showBigTitle].a_time*60*1000;\n\t\t\t\t\t\t\t\t\t\t\t\t\tself.timer = setInterval(()=>{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(self.flag == true){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclearInterval(self.timer);//时间到\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tself.goNext();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tself.timeDown();\n\t\t\t\t\t\t\t\t\t\t\t\t\t},1000);\n\t\t\t\t\t\t\t\t\t\t\t\t\t//发送当前状态\n\t\t\t\t\t\t\t\t\t\t\t\t\tself.sendStatus();\n\t\t\t\t\t\t\t\t\t\t\t\t}).catch((err)=>{})\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t//没有倒计时\n\t\t\t\t\t\t\t\t\t\t\tself.showClock = false;\n\t\t\t\t\t\t\t\t\t\t\tclearInterval(self.timer);\n\t\t\t\t\t\t\t\t\t\t\t//发送当前状态\n\t\t\t\t\t\t\t\t\t\t\tself.sendStatus();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n                            }\n\t\t\t\t\t\t\tself.$store.state.loading = false;\n\t\t\t\t\t\t}).catch(function (error) {});\n\t\t\t\t\t\t/****以上关于素材***/\n                    } else{\n                    \t//播放素材之外\n                    \tif(this.showTitleA == '播放题目'){\n                            //清空素材\n                            this.pictureMaterial = '';\n                            this.videoMaterial = '';\n\t\t\t\t\t\t\tthis.videoOptions1.sources[0].src = \"\";\n                            this.getSubject();  //获取题目\n                        } else if(this.showTitleA == '开始答题'){\n                            if(this.subject.problem_time){  //如果是0 就尴尬了\n                                limit = this.subject.problem_time *60*1000;//答题时间\n\t\t\t\t\t\t\t\tthis.countDownTime = this.subject.problem_time *60;\n                                leftTime = now.getTime() + limit;\n                            }\n\t\t\t\t\t\t\tthis.getSubject();  //获取题目\n                        } else if(this.showTitleA == \"显示所有组答案\"){\n                            this.loadingText = '正在整合各组答案';\n//                            clearInterval(this.timeAnswer);\n                            this.getGroupList();    //获取分组\n                            //如果是点击显示所有组答案，则\n                            if(this.subject.answer != null){\n                                //有参考答案\n                                this.showRightBtn = true;\n                            } else {\n                                this.showRightBtn = false;\n                            }\n                            let self = this;\n                            //延时调接口  避免最后提交的答案没有获取到\n                            let atime = setInterval(function() {\n                                self.getAllAnswer();      //获取所有组答案\n                                clearInterval(atime);\n                            }, 3000);\n                        } else if(this.showTitleA == '开始点评'){\n                            if(this.node[this.showBigTitle].score_user){//其实不用判断这个（有点评环节就肯定有人）\n                                if(this.node[this.showBigTitle].time){\n                                    limit = this.node[this.showBigTitle].time *60000;\n\t\t\t\t\t\t\t\t\tthis.countDownTime = this.node[this.showBigTitle].time *60;\n                                    leftTime = now.getTime() + limit;\n                                }\n                            }\n                            this.$store.state.loading = false;\n                        } else if(this.showTitleA == '开始打分'){\n                            //如果下一步点击显示开始打分\n                            if(this.node[this.showBigTitle].score_time){\n                                limit = this.node[this.showBigTitle].score_time *60*1000;\n\t\t\t\t\t\t\t\tthis.countDownTime = this.node[this.showBigTitle].score_time *60;\n                                leftTime = now.getTime() + limit;\n                            }\n\t\t\t\t\t\t\tthis.getSubject();  //获取题目\n                        } else if(this.showTitleA == '展示得分'){\n                            this.showRightBtn = false;  //隐藏参考答案按钮\n                            this.showReference = true;  //隐藏参考答案\n    //                        this.getSubject();  //获取题目\n                            this.getTotalPoints();//获取总分\n                            this.getAllScore();\n                            this.getRank();\n                        } else if(this.showTitleA == '结束演练'){\n                            this.showRightBtn = false;\n                            this.getRank();\n                            this.overDrill();\n                        }\n                        this.endTime = leftTime;\n                        clearInterval(this.timer);\n                        this.flag = false;\n                        if(this.endTime == ''){\n                            clearInterval(this.timer);\n                            this.showClock = false;\n                        } else {\n                            this.timer = setInterval(()=>{\n                                if(this.flag == true){\n                                    clearInterval(this.timer);//时间到\n                                    this.goNext();\n                                }\n                                this.timeDown();\n                            },1000);\n                        }\n                        //发送当前状态\n                        this.sendStatus();\n                    }\n                }).catch((err)=>{\n            })\n        },\n        //发送演练进行状态\n        sendStatus(){\n//            console.log('发送');\n            this.design_status.node_id = this.node[this.showBigTitle].id;\n            this.design_status.step = this.showTitleA;\n            this.design_status.end_time = this.endTime;\n            let str = JSON.stringify(this.design_status);\n            this.$axios.post('/api/save-design',{\n                  design_id: this.project_id,\n                  design_location: str\n            }).then((response) => {\n            //console.log(response)\n            }).catch(function (error) {\n            })\n        },\n        //获取演练状态\n        getDrillStatus(){\n//            console.log(\"获取状态\");\n            let dStatus = {};\n            this.$axios.post('/api/look-status',{\n                design_id: this.project_id,\n            }).then((response)=>{\n//                console.log(response);\n                if(response.data.status == 0){\n                    if(response.data.data.design_location == null){\n                        //为空代表刚开始，根据第一环节 显示环节的步骤内容\n                        if(this.node[this.showBigTitle].score_user != null){\n                            this.linkTitleDetail = [\"播放素材\",\"播放题目\",\"开始答题\",\"显示所有组答案\",\n                               \"开始点评\",\"开始打分\",\"展示得分\"];\n                            } else {\n                                this.linkTitleDetail = [\"播放素材\",\"播放题目\",\"开始答题\",\"显示所有组答案\",\n                                   \"开始打分\",\"展示得分\"];\n                            }\n                            //获取第一环节的素材\n                            this.textMaterial = this.node[this.showBigTitle].description;\n/*******************素材*****************/\n                            let self = this;\n                            this.$axios.post('/api/play-video',{\n                                node_id: this.node[this.showBigTitle].id,\n                            }).then(function (response) {\n//                                console.log(response);\n                                if(response.data.data == null){\n                                    //没有文件素材\n                                    //判断第一环节的播放素材是否有倒计时\n                                    if(self.node[self.showBigTitle].a_time){\n                                        //显示倒计时 赋值倒计时时间并开始\n                                        self.$axios.post('/api/time-end')\n                                            .then((response)=>{\n                                                let now = self.NewDate(response.data.data);\n                                                self.countDownTime = self.node[self.showBigTitle].a_time*60;\n                                                self.endTime = now.getTime() + self.node[self.showBigTitle].a_time*60*1000;\n                                                self.timer = setInterval(()=>{\n                                                    if(self.flag == true){\n                                                        clearInterval(self.timer);//时间到\n                                                        self.goNext();\n                                                    }\n                                                    self.timeDown();\n                                                },1000);\n                                                //发送当前状态\n                                                self.sendStatus();\n                                            }).catch((err)=>{})\n                                    } else {\n                                        self.showClock = false;\n                                        clearInterval(self.timer);\n                                        //发送当前状态\n                                        self.sendStatus();\n                                    }\n                                } else {\n                                    let ImgType = [\"gif\", \"jpeg\", \"jpg\", \"bmp\", \"png\", 'webp', 'psd', 'svg', 'tiff'];//图片\n                                    for (let i in response.data.data) {\n                                        if (!RegExp(\"\\.(\" + ImgType.join(\"|\") + \")$\", \"i\").test(response.data.data[i].file_path.toLowerCase())) {\n                                            self.videoMaterial = response.data.data[i].original_file;\n\t\t\t\t\t\t\t\t\t\t\tself.videoOptions1.sources[0].src = self.$store.state.file_path + response.data.data[i].original_file;\n                                            //判断第一环节的播放素材是否有倒计时\n                                            if (self.node[0].a_time) {\n                                                let ii = setInterval(function () {\n                                                    let video = document.getElementById('video');\n                                                    if (video.readyState > 0) {\n                                                        self.videoDuration = video.duration * 1000;\n                                                        clearInterval(ii);\n                                                        //显示倒计时 赋值倒计时时间并开始\n                                                        self.$axios.post('/api/time-end')\n                                                            .then((response) => {\n                                                                let now = self.NewDate(response.data.data);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tself.countDownTime = self.node[self.showBigTitle].a_time*60 + video.duration;\n                                                                self.endTime = now.getTime() + self.node[0].a_time * 60 * 1000 + self.videoDuration;\n                                                                self.timer = setInterval(() => {\n                                                                    if (self.flag == true) {\n                                                                        clearInterval(self.timer);//时间到\n                                                                        self.goNext();\n                                                                    }\n                                                                    self.timeDown();\n                                                                }, 1000);\n                                                                //发送当前状态\n                                                                self.sendStatus();\n                                                            }).catch((err) => {\n                                                        })\n                                                    }\n                                                }, 200);\n                                            } else {\n                                                //没有倒计时\n                                                self.showClock = false;\n                                                clearInterval(self.timer);\n                                                //发送当前状态\n                                                self.sendStatus();\n                                            }\n                                        } else {\n                                            //图片素材\n                                            self.pictureMaterial = response.data.data[i].original_file;\n                                            //判断第一环节的播放素材是否有倒计时\n                                            if (self.node[0].a_time) {\n                                                //显示倒计时 赋值倒计时时间并开始\n                                                self.$axios.post('/api/time-end')\n                                                    .then((response) => {\n                                                        let now = self.NewDate(response.data.data);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tself.countDownTime = self.node[0].a_time * 60;\n                                                        self.endTime = now.getTime() + self.node[0].a_time * 60 * 1000;\n                                                        self.timer = setInterval(() => {\n                                                            if (self.flag == true) {\n                                                                clearInterval(self.timer);//时间到\n                                                                self.goNext();\n                                                            }\n                                                            self.timeDown();\n                                                        }, 1000);\n                                                        //发送当前状态\n                                                        self.sendStatus();\n                                                    }).catch((err) => {\n                                                })\n                                            } else {\n                                                self.showClock = false;\n                                                clearInterval(self.timer);\n                                                //发送当前状态\n                                                self.sendStatus();\n                                            }\n                                        }\n                                    }\n                                }\n                                self.$store.state.loading = false;\n                            }).catch(function (error) {\n                            });\n\t\t\t\t\t\t/********以上是第一环节的步骤*******/\n                    } else {\n                        dStatus = JSON.parse(response.data.data.design_location);\n                        //根据环节id 获取该环节步骤\n                        for(let i in this.node){\n                            if(this.node[i].id == dStatus.node_id){\n                                this.showBigTitle = i;\n                                if(i == this.node.length-1){\n                                    this.isLastLink = true;\n                                } else {\n                                    this.isLastLink = false;\n                                }\n                                //根据环节id 显示环节的步骤内容\n                                if(this.node[this.showBigTitle].score_user != null){\n                                    this.linkTitleDetail = [\"播放素材\",\"播放题目\",\"开始答题\",\"显示所有组答案\",\"开始点评\",\"开始打分\",\"展示得分\"];\n                                } else {\n                                    this.linkTitleDetail = [\"播放素材\",\"播放题目\",\"开始答题\",\"显示所有组答案\",\"开始打分\",\"展示得分\"];\n                                }\n                            }\n                        }\n                        clearInterval(this.timer);\n                        //是否有倒计时的目标时间\n                        if(dStatus.end_time){\n                            this.endTime = dStatus.end_time;\n\t\t\t\t\t\t\tthis.$axios.post('/api/time-end')\n\t\t\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\t\t\tlet now = this.NewDate(response.data.data);\n\t\t\t\t\t\t\t\t\tthis.countDownTime = (dStatus.end_time - now)/1000;\n\t\t\t\t\t\t\t\t\tif(this.countDownTime <= 0){\n\t\t\t\t\t\t\t\t\t\tthis.flag = false;\n\t\t\t\t\t\t\t\t\t\tclearInterval(this.timer)\n\t\t\t\t\t\t\t\t\t\tthis.goNext();\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tthis.timer = setInterval(()=>{\n\t\t\t\t\t\t\t\t\t\t\tif(this.flag == true){\n\t\t\t\t\t\t\t\t\t\t\t\tclearInterval(this.timer);//时间到\n\t\t\t\t\t\t\t\t\t\t\t\tthis.goNext();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tthis.timeDown();\n\t\t\t\t\t\t\t\t\t\t},1000);\n                                    }\n                                }).catch((err)=>{})\n                        } else {\n                            this.endTime = '';\n                            this.showClock = false;\n                            clearInterval(this.timer);\n                        }\n                        //获取当前步骤\n                        for(let i in this.linkTitleDetail){\n                            if(this.linkTitleDetail[i] == dStatus.step){\n                                this.showTitleIndex = i;\n                            }\n                        }\n                        this.showTitleA = dStatus.step;\n                        if(this.showTitleA == \"播放素材\"){\n                            //获取的文字素材和文件素材\n                            this.textMaterial = this.node[this.showBigTitle].description;\n                            this.getMaterial();\n                        } else if(this.showTitleA == \"播放题目\"){\n                            this.getSubject();\n                        } else if(this.showTitleA == \"开始答题\"){\n                            this.getSubject();\n                        } else if(this.showTitleA == \"显示所有组答案\"){\n                            this.getSubject();\n                        } else if(this.showTitleA == \"开始点评\"){\n                            this.getSubject();\n                        } else if(this.showTitleA == \"开始打分\"){\n                            this.getSubject();\n                        } else if(this.showTitleA == \"展示得分\"){\n                            this.$store.state.loading = true;\n                            this.getTotalPoints();//获取总分\n                            this.getAllScore();\n                            this.getRank();\n                        } else if(this.showTitleA == \"结束演练\"){\n                            this.getTotalPoints();//获取总分\n                            this.getRank();\n                            this.end = true;\n                            this.overDrill();\n                        }\n                    }\n                }\n            }).catch(function (error) {})\n        },\n        //获取演练分组\n        getGroupList(){\n            let self = this;\n            this.$axios.post('/api/group-start',{\n                design_id: this.project_id\n            }).then(function (response) {\n                //console.log(response)\n                self.groupLists = response.data.data;\n            }).catch(function () {\n            })\n        },\n        //获取演练环节内容\n        getLinkDrill(){\n            let self = this;\n            this.$axios.post('/api/start',{\n                design_id: this.project_id\n            }).then(function (response) {\n//                console.log(response);\n                if(response.data.status == 0){\n                    self.node = response.data.data.node_name;\n                if(self.node.length == 1){\n                    self.isLastLink = true;\n                }\n                    self.getDrillStatus();    //获取演练进行的状态\n                }\n            }).catch(function (error) {\n            })\n        },\n        //根据环节id获取环节素材\n        getMaterial(){\n            let self = this;\n            let videoArr = '';\n            let picArr = '';\n            this.$axios.post('/api/play-video',{\n                node_id: this.node[this.showBigTitle].id,\n            }).then(function (response) {\n//                console.log(response);\n                let ImgType=[\"gif\", \"jpeg\", \"jpg\", \"bmp\", \"png\", 'webp', 'psd', 'svg', 'tiff'];//图片\n                for(let i in response.data.data){\n                    if(!RegExp(\"\\.(\" + ImgType.join(\"|\") + \")$\", \"i\").test(response.data.data[i].file_path.toLowerCase())){\n                        videoArr = response.data.data[i].original_file;\n                    } else {\n                        picArr = response.data.data[i].original_file;\n                    }\n                }\n                self.videoMaterial = videoArr;\n                self.videoOptions1.sources[0].src = self.$store.state.file_path + videoArr;\n                console.log(\"666\")\n                self.pictureMaterial = picArr;\n                self.$store.state.loading = false;\n            }).catch(function (error) {})\n        },\n        //根据环节id获取环节题目\n        getSubject(){\n            let self = this;\n            this.$axios.post('/api/play-problem',{\n                node_id: this.node[this.showBigTitle].id,\n            }).then(function (response) {\n                //console.log(response);\n\t\t\t\tself.subject = response.data.data[0].problem;\n                if(self.showTitleA == '显示所有组答案'||self.showTitleA =='开始点评'||self.showTitleA == \"开始打分\"){\n                    if(self.subject.answer != null){\n                        //有参考答案\n                        self.showRightBtn = true;\n\t\t\t\t\t\t//查看参考答案的显示与否的状态\n\t\t\t\t\t\tself.$axios.post('/api/problem-status',{\n\t\t\t\t\t\t\tproblem_id: self.subject.id,\n\t\t\t\t\t\t}).then((response)=>{\n//\t\t\t\t\t\tconsole.log(response)\n\t\t\t\t\t\t\tif(response.data.data.status == 1){\n\t\t\t\t\t\t\t\t//显示参考答案\n\t\t\t\t\t\t\t\tself.showReference = false;\n\t\t\t\t\t\t\t\tself.$nextTick(()=>{\n\t\t\t\t\t\t\t\t\tlet ref = document.getElementsByClassName('reference_content');\n\t\t\t\t\t\t\t\t\tlet spans = ref[0].childNodes[0].childNodes[0];\n\t\t\t\t\t\t\t\t\tif(spans.offsetHeight < 60){\n\t\t\t\t\t\t\t\t\t\tref[0].setAttribute('class', 'reference_content have_not');\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else{\n\t\t\t\t\t\t\t\tself.showReference = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}).catch((err)=>{})\n                    } else {\n                        self.showRightBtn = false;\n                    }\n                    self.getAllAnswer();//获取所有组答案\n                } else if(self.showTitleA == '开始答题'){\n\t\t\t\t} else {\n\t\t\t\t\tself.$store.state.loading = false;\n                }\n            }).catch(function (error) {\n            })\n        },\n        //根据演练id 问题id获取已经回答问题的人数\n        getAnswerNum(){\n        \tthis.$axios.post('/api/answer-user',{\n        \t\tdesign_id: this.project_id,\n                problem_id: this.subject.id\n            }).then((response)=>{\n//        \t\tconsole.log(response);\n        \t\tthis.answerCount = response.data.data.length;\n\t\t\t\tthis.$store.state.loading = false;\n            }).catch((err)=>{})\n        },\n        //根据问题id 获取所有组答案\n        getAllAnswer(){\n            let self = this;\n            this.allAnswer = [];\n            let arrGroup = this.groupLists;\n            this.$axios.post('/api/play-answer',{\n                problem_id: this.subject.id,\n            }).then(function (response) {\n                //  console.log(response);\n                //判断该演练是否分组\n                if(arrGroup[0].name == '此演练不分组'){\n                    let arr = [];\n                    for(let i in response.data.data){\n                        arr.push({\n                            name: response.data.data[i].user.name,\n                            answer: response.data.data[i].answer,\n                            answer_id: response.data.data[i].id,\n                            show: true\n                        })\n                    }\n                    arrGroup = arr;\n                } else {\n                    //多组\n                    for(let i in response.data.data){\n                        for(let x in arrGroup){\n                            arrGroup[x].show = 1;\n                            if(response.data.data[i].user_id == arrGroup[x].group_user){\n                                arrGroup[x].answer = response.data.data[i].answer;\n                                arrGroup[x].answer_id = response.data.data[i].id;\n                            }\n                        }\n                    }\n                }\n                //去除没有回答的小组\n                let arrResult = [];\n                for(let i in arrGroup){\n                    if(arrGroup[i].answer_id){\n                        arrResult.push(arrGroup[i]);\n                    }\n                }\n                self.allAnswer = arrResult;\n                //查看答案内容长度\n                self.$nextTick(()=>{\n                    let all = document.getElementsByClassName('answer');\n                    for(let i = 0; i < all.length; i++){\n                        //如果第一个子元素div的自元素span的高度超出50， 即小组答案超出两行\n                        let spanH =  all[i].childNodes[0].childNodes[0];\n                        if(spanH.offsetHeight < 60){\n                            all[i].setAttribute('class', 'answer hide_btn');\n                        } else {\n                        }\n                    }\n                });\n                if(self.showTitleA == '开始打分'){\n                } else {\n\t\t\t\t\tself.$store.state.loading = false;\n                }\n            }).catch(function (error) {\n            })\n        },\n        //显示参考答案\n        showClick(){\n            this.showReference = !this.showReference;\n            this.$nextTick(()=>{\n                let ref = document.getElementsByClassName('reference_content');\n                let spans = ref[0].childNodes[0].childNodes[0];\n                if(spans.offsetHeight < 60){\n                    ref[0].setAttribute('class', 'reference_content have_not');\n                } else {\n                }\n            });\n            //掉接口\n            let aid = '';\n\t\t\tthis.$axios.post('/api/play-problem',{\n\t\t\t\tnode_id: this.node[this.showBigTitle].id,\n\t\t\t}).then((res)=>{\n//\t\t\t\tconsole.log(res)\n                if(res.data.data){\n\t\t\t\t\taid = res.data.data[0].problem.id;\n\t\t\t\t\tthis.$axios.post('/api/problem-status',{\n\t\t\t\t\t\tproblem_id: aid,\n                        status: 1\n                    }).then((response)=>{\n\t\t\t\t\t\tconsole.log(response)\n                    }).catch((err)=>{})\n                }\n            }).catch((error)=>{})\n        },\n        //隐藏参考答案\n        hiddenClick(){\n\t\t\tthis.showReference = !this.showReference;//掉接口\n\t\t\tlet aid = '';\n\t\t\tthis.$axios.post('/api/play-problem',{\n\t\t\t\tnode_id: this.node[this.showBigTitle].id,\n\t\t\t}).then((res)=>{\n//\t\t\t\tconsole.log(res)\n\t\t\t\tif(res.data.data){\n\t\t\t\t\taid = res.data.data[0].problem.id;\n\t\t\t\t\tthis.$axios.post('/api/problem-status',{\n\t\t\t\t\t\tproblem_id: aid,\n\t\t\t\t\t\tstatus: 2\n\t\t\t\t\t}).then((response)=>{\n\t\t\t\t\t\tconsole.log(response)\n\t\t\t\t\t}).catch((err)=>{})\n\t\t\t\t}\n\t\t\t}).catch((error)=>{})\n        },\n        //查看几个人已经评分\n        checkRecordNum(){\n\t\t\tlet pid = '';\n        \tthis.$axios.post('/api/play-problem',{\n\t\t\t\tnode_id: this.node[this.showBigTitle].id,\n            }).then((res)=>{\n//        \t\tconsole.log(res)\n                if(res.data.data){\n        \t\t\tpid = res.data.data[0].problem.id;\n        \t\t\tthis.$axios.post('/api/score-user',{\n\t\t\t\t\t\tdesign_id: this.project_id,\n\t\t\t\t\t\tproblem_id: pid\n\t\t\t\t\t}).then((response)=>{\n//        \t\t          console.log(response);\n\t\t\t\t\t\tlet arr = []; //保存同一个id的数组  获取评分人数\n\t\t\t\t\t\tif(response.data.data){\n\t\t\t\t\t\t\tarr.push(response.data.data[0]);\n\t\t\t\t\t\t\tfor(let i in response.data.data){\n\t\t\t\t\t\t\t\tif(arr[0].user_id == response.data.data[i].user_id){\n\t\t\t\t\t\t\t\t\tarr.push(response.data.data[i])\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.scoreCount = arr.length-1;//减1是去除重复的第一个人\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.scoreCount = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.$store.state.loading = false;\n\t\t\t\t\t}).catch((err)=>{})\n                }\n            }).catch((error)=>{})\n        },\n        //显示答案隐藏详情\n        clickAnswerDetail(val,status){\n            for(let i in this.allAnswer){\n                if(this.allAnswer[i].id == val){\n                    if(status){\n                        this.allAnswer[i].show = false;\n                    } else {\n                        this.allAnswer[i].show = true;\n                    }\n                } else {\n                }\n            }\n            if(this.showTitleA == '显示所有组答案'){\n                this.showTitleA = '';\n                this.showTitleA = '显示所有组答案';\n            } else if(this.showTitleA == '开始打分'){\n                this.showTitleA = '';\n                this.showTitleA = '开始打分';\n            }else if(this.showTitleA == '开始点评'){\n                this.showTitleA = '';\n                this.showTitleA = '开始点评';\n            }\n        },\n        //获取该演练的总分\n        getTotalPoints(){\n            this.scoreTotal = 0;\n            for(let i in this.node){\n                this.$axios.post('/api/play-problem',{\n                    node_id: this.node[i].id\n                }).then((response) => {\n                    //console.log(response);\n                    let score = response.data.data[0].problem.score;\n                    this.scoreTotal = this.scoreTotal + score;\n                }).catch((err)=>{})\n            }\n        },\n        //展示所有得分\n        getAllScore(){\n            //获取问题id\n//            console.log(1);\n            let val = '';\n            let scoreArr = [];\n            this.$axios.post('/api/play-problem',{\n                node_id: this.node[this.showBigTitle].id,\n            }).then((response)=>{\n                //console.log(response)\n                if(response.data.data){\n                    val = response.data.data[0].problem.id;\n                    //获取得分\n                    this.$axios.post('/api/score-node',{\n                        design_id: this.project_id,\n                        problem_id: val\n                    }).then((response) => {\n                    //console.log(response);\n                    if(response.data.status == 0){\n                        if(this.groupLists[0].name == '此演练不分组'){\n                            let arr = response.data.data;\n                            for(let i in response.data.data){\n                                arr[i].name = response.data.data[i].user_name;\n                            }\n                            scoreArr = arr;\n                        } else {\n                            //多组\n                            for(let x in this.groupLists){\n                                for(let i in response.data.data){\n                                    if(response.data.data[i].user_id == this.groupLists[x].group_user){\n                                        scoreArr.push({\n                                        name: this.groupLists[x].name,\n                                        score: response.data.data[i].score\n                                        });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.scoreLinkGroup = scoreArr;\n//\t\t\t\t\t\tconsole.log(2)\n                    this.$store.state.loading = false;\n                    }).catch((error)=>{\n                    })\n                }\n            })\n        },\n        //显示排名\n        getRank(){\n//\t\t\tconsole.log(3);\n            let arr = [];\n            this.$axios.post('/api/accord-rank',{\n                design_id: this.project_id\n            }).then((response) => {\n                //console.log(response);\n                arr = response.data.data;\n                for(let i=0;i < arr.length;i++){\n                    if(i == 0) {\n                        arr[i].src='./static/first.png';\n                    } else if(i==1){\n                        arr[i].src='./static/second.png';\n                    } else if(i==2){\n                        arr[i].src='./static/third.png';\n                    } else if(i==3){\n                        arr[i].src='./static/fourth.png';\n                    }\n                }\n                this.allScoreRank = arr;\n                //console.log(arr)\n                if(this.allScoreRank.length>=4){\n                    this.rankIndex = \"四\"\n                } else if(this.allScoreRank.length == 3){\n                    this.rankIndex = \"三\";\n                } else if(this.allScoreRank.length == 2){\n                    this.rankIndex = \"二\";\n                } else if(this.allScoreRank.length == 1){\n                    this.rankIndex = \"一\";\n                }\n                if(this.showTitleA == \"结束演练\"){\n                    this.$store.state.loading = false;\n                }\n//\t\t\t\tconsole.log(4)\n            }).catch((error) =>{\n            })\n        },\n        //结束演练\n        overDrill(){\n            //获取人员列表\n            let arrID = [];\n            this.$axios.post('/api/user-sign',{\n                design_id: this.project_id\n            }).then((response) => {\n                 console.log(response.data.data);\n                 let allPeople = [];\n\t\t\t\t//最后一个键值  如果是score_user 有点评人\n\t\t\t\tlet last = response.data.data[\"score_user\"];\n//\t\t\t\tconsole.log(response.data.data[\"score_user\"]);\n//\t\t\t\tconsole.log(Object.keys(response.data.data)[Object.keys(response.data.data).length-1]);\n\t\t\t\tif(last.length == 0){ //没有点评人\n\t\t\t\t\tfor(let i in response.data.data){\n\t\t\t\t\t\tallPeople.push(response.data.data[i])\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//有点评人\n\t\t\t\t\tfor(let i in response.data.data){\n\t\t\t\t\t\tallPeople.push(response.data.data[i])\n\t\t\t\t\t}\n\t\t\t\t\tallPeople.pop();    //去除点评数组后重新加入数据\n\t\t\t\t\tallPeople.push(response.data.data[\"score_user\"][0]);\n//\t\t\t\t\tconsole.log(allPeople)\n\t\t\t\t}\n                for(let i in allPeople){\n                    arrID.push(allPeople[i].user_id);\n                }\n                //结束演练\n                this.$axios.post('/api/end',{\n                   design_id: this.project_id,\n                   user_id: arrID,\n                }).then((response) =>{\n                //console.log(response);\n               }).catch((err)=>{})\n            }).catch((error) => {\n            })\n        },\n\t\t//下载文档\n\t\tdownloadDrillText(){\n\t\t\tthis.$axios.post('/api/word',{\n\t\t\t\tdesign_id: this.project_id\n\t\t\t}).then((res)=>{\n//\t\t\t\tconsole.log(res)\n\t\t\t\tif(res.data.message == '成功'){\n//\t\t\t\t\twindow.open(this.$store.state.download_path+'?design_id='+val,'_parent');\n\t\t\t\t\twindow.open('http://'+window.location.host+this.$store.state.download_path+'?design_id='+val,'_parent');\n\t\t\t\t}\n\t\t\t}).catch((error)=>{\n//\t\t\t\tconsole.log(error)\n\t\t\t})\n\t\t},\n\n\t    //观看端，拉流\n\t    //获取正在直播的流\n\t    getLivingFlow(){\n\t\t    this.$axios.post('/api/list-live',{\n\t\t\t    \"prefix\":'php',\n\t\t\t    \"limit\":2\n\t\t    }).then((res)=>{\n//                console.log(res)\n\t\t\t    this.pullKey = res.data.keys[0];\n\t\t\t    this.getPullFlow();\n\t\t    }).catch((error)=>{\n\t\t\t    console.log(error);\n\t\t    })\n\t    },\n\t    //拉流\n\t    getPullFlow(){\n\t\t    this.$axios.post('/api/get-play',{\n\t\t\t    \"streamKey\":this.pullKey\n\t\t    }).then((res)=>{\n//                console.log(res)\n\t\t\t    this.videoOptions.sources[0].src = res.data;\n//                this.isLive =true;\n\t\t    }).catch((error)=>{\n\t\t\t    console.log(error);\n\t\t    })\n\t    },\n    },\n    filters: {\n\t\tmarkStatus: function(value) {\n\t\t\tif (value == 0.0) {\n\t\t\t\treturn \"0\";\n\t\t\t}else{\n\t\t\t\treturn parseFloat(value).toFixed(1);\n            }\n\t\t}\n    }\n}\n</script>\n<style lang=\"less\" rel=\"stylesheet/less\">\n  .direct_start{\n    //灰色抬头\n    .direct_title{\n      background-color: #f1f1f1;\n      ul{\n        height: 40px;\n        line-height: 40px;\n        padding-left: 58px;\n        display: inline-block;\n        li{\n          display: inline-block;\n          font-size: 14px;\n          text-align: left;\n          color: #000000;\n          height: 25px;\n          line-height: 25px;\n          position: relative;\n          padding: 0 10px;\n          &:after{\n            content: '';\n            width:0;\n            border-left: solid  darkblue 1px;\n            height: 14px;\n            position: absolute;\n            right: 0;\n            top: 5px;\n          }\n        }\n        li:last-child{\n          &:after{\n            height: 0;\n          }\n        }\n        .startDirectA{\n          color: #4a90e2;\n        }\n      }\n      div{\n        float: right;\n        margin-right: 53px;\n        margin-top: 5px;\n        .el-button{\n          height: 30px;\n          line-height: 30px;\n          background-color: #4a90e2;\n          padding: 0 40px;\n          color: #fff;\n        }\n      }\n    }\n    //环节栏\n    .direct_link{\n      width: 80%;\n      margin: 10px 0 10px 46px;\n      position: relative;\n      ul{\n        display: inline-block;\n        width: 700px;\n        li{\n          display: inline-block;\n          width: 130px;\n          height: 40px;\n          line-height: 40px;\n          font-size: 16px;\n          text-align: center;\n          position: relative;\n          color: #4a4a4a;\n          margin-right: 5px;\n          margin-bottom: 10px;\n          background-color: #f1f1f1;\n          span{\n          }\n        }\n        //正在进行的环节\n        .directLinkActive{\n          color: #fff;\n          background-color: #4a90e2;\n          span{\n            position: absolute;\n            bottom: 0;\n            left: 50%;\n            margin-left: -5px;\n            margin-bottom: -5px;\n            width: 10px;\n            height: 10px;\n            border-left: 0;\n            border-top: 0;\n            transform:rotate(45deg);\n            -ms-transform:rotate(45deg); \t/* IE 9 */\n            -moz-transform:rotate(45deg); \t/* Firefox */\n            -webkit-transform:rotate(45deg); /* Safari 和 Chrome */\n            -o-transform:rotate(45deg); \t/* Opera */\n            background-color: #4a90e2;\n          }\n        }\n        //已经结束的环节\n        .directLinkEnd{\n          background-color: #89cef5;\n          color: #fff;\n        }\n      }\n      //倒计时\n      .clock{\n        width: 150px;\n        height: 40px;\n        margin-right: -25px;\n        margin-left: 50px;\n        float: right;\n        /*position: absolute;*/\n        /*top: 0;*/\n        /*right: 0;*/\n        div.clock-box{\n          font-size: 20px;\n          border-radius: 3px;\n          background-color: #f8ba54;\n          color: #ffffff;\n          height: 40px;\n          line-height: 40px;\n          i{\n            display: inline-block;\n            margin-left: 20px;\n            margin-right: 20px;\n            margin-top: 6px;\n            &:before{\n              font-size: 28px;\n            }\n          }\n          span{\n            float: right;\n            height: 40px;\n            width: 60px;\n            margin-right: 10px;\n            text-align: left;\n          }\n        }\n      }\n      //参考答案按钮\n      .referenceBtn{\n        margin-right: -25px;\n        float: right;\n        /*position: absolute;*/\n        /*top: 0;*/\n        /*right: 0;*/\n      }\n    }\n    .direct_main{\n      width: 80%;\n      margin: 10px 0 50px 46px;\n      height: 600px;\n      padding: 10px 15px 20px 10px;\n      position: relative;\n      //观看素材\n      .material_play1{\n        background-color: #fff;\n        height: 570px;\n        padding-left: 18px;\n        /*width: 100%;*/\n        /*padding: 10px 0 20px 15px;*/\n        h3{\n          height: 45px;\n          font-size: 16px;\n          font-weight: 500;\n          line-height: 45px;\n          text-align: left;\n          color: #4a4a4a;\n          /*margin-left: 18px;*/\n        }\n        p.textMaterial{\n          font-size: 16px;\n          color: #000;\n          margin-bottom: 10px;\n        }\n        //图片\n        .show_img{\n          img{\n            width: auto;\n            max-height: 500px;\n            max-width: 1000px;\n          }\n        }\n        //视频\n        .play_video{\n          width: 90%;\n          height: 500px;\n          /*margin-left: 18px;*/\n          background-color: #000;\n        }\n      }\n      //观看题目\n      .subject_play{\n        background-color: #fff;\n        padding-left: 18px;\n        padding-bottom: 32px;\n        padding-right: 75.8px;\n        font-size: 16px;\n        font-weight: 500;\n        text-align: left;\n        h3{\n          height: 45px;\n          line-height: 45px;\n          color: #4a4a4a;\n          font-size: 16px;\n          font-weight: 500;\n          text-align: left;\n        }\n        p{\n          color: #f5a623;\n        }\n        div{\n          margin-top: 17px;\n          color: #4a4a4a;\n        }\n      }\n      //参考答案\n      .show_reference{\n        background-color: #fff;\n        padding-left: 23px;\n        min-height: 106px;\n        margin-bottom: 10px;\n        position: relative;\n        .reference_title{\n          height: 22px;\n          font-size: 16px;\n          width: 10%;\n          text-align: left;\n          color: #000000;\n          position: absolute;\n          top: 50%;\n          left: 23px;\n          margin-top: -11px;\n        }\n        .reference_content{\n          display: inline-block;\n          width: 85%;\n          font-size: 16px;\n          line-height: 1.75;\n          text-align: left;\n          color: #7d7c7d;\n          padding-top: 15.4px;\n          margin-left: 10%;\n          span{\n            display: inline-block;\n            line-height: 25px;\n          }\n          .showAllReferenceContent{\n            height: 50px;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            display: -webkit-box;\n            -webkit-line-clamp: 2;\n            -webkit-box-orient: vertical;\n          }\n          p{\n            font-size: 16px;\n            color: #4a90e2;\n            text-align: right;\n            padding-right: 10px;\n            span{\n              cursor: pointer;\n            }\n          }\n        }\n        .have_not{\n          p{\n            display: none;\n          }\n        }\n      }\n      //所有参演组答案\n      .all_answer{\n        li{\n          background-color: #fff;\n          padding-left: 23px;\n          min-height: 106px;\n          margin-bottom: 10px;\n          position: relative;\n          div.group_name{\n            height: 22px;\n            font-size: 16px;\n            width: 10%;\n            text-align: left;\n            color: #000000;\n            position: absolute;\n            top: 50%;\n            left: 23px;\n            margin-top: -11px;\n          }\n          //多于两行的答案样式\n          div.answer{\n            display: inline-block;\n            width: 85%;\n            font-size: 16px;\n            line-height: 1.75;\n            text-align: left;\n            color: #7d7c7d;\n            padding-top: 15.4px;\n            margin-left: 10%;\n            >div{\n              margin-bottom: 10px;\n              span{\n                display: inline-block;\n                line-height: 25px;\n              }\n            }\n            .answer_roughly{\n              height: 50px;\n              overflow: hidden;\n              text-overflow: ellipsis;\n              display: -webkit-box;\n              -webkit-line-clamp: 2;\n              -webkit-box-orient: vertical;\n            }\n            /*span{*/\n            /*display: inline-block;*/\n            /*line-height: 25px;*/\n            /*margin-bottom: 10px;*/\n            /*}*/\n            //显示隐藏\n            .answer_detail{\n              font-size: 16px;\n              color: #4a90e2;\n              text-align: right;\n              padding-right: 10px;\n              span{\n                cursor: pointer;\n              }\n            }\n          }\n          //少于两行的文字样式 并隐藏显示全部的按钮\n          .hide_btn{\n            /*display: inline-block;*/\n            /*width: 85%;*/\n            /*font-size: 16px;*/\n            /*line-height: 1.75;*/\n            /*text-align: left;*/\n            /*color: #7d7c7d;*/\n            /*padding-top: 15.4px;*/\n            /*margin-left: 10%;*/\n            /*>div{*/\n\n            /*}*/\n            /*span{*/\n            /*display: inline-block;*/\n            /*line-height: 25px;*/\n            /*margin-bottom: 10px;*/\n            /*}*/\n            p{\n              display: none;\n            }\n          }\n        }\n      }\n      //开始点评\n      .start_comment{\n        width:100%;\n        /*position: absolute;*/\n        /*bottom: 100px;*/\n        /*right: 0;*/\n      }\n      //开始打分\n      .start_score{\n          font-size: 30px;\n          color: #4a4a4a;\n          text-align: center;\n          margin-bottom: 30px;\n          position: relative;\n          .loading{\n              width:100px;\n              position: absolute;\n              top:0;\n              left:50%;\n              margin-left: 98px;\n          }\n          .object{\n              width: 7px;\n              height: 7px;\n              background-color: #4a4a4a;\n              float: left;\n              margin-right: 20px;\n              margin-top: 20px;\n              -moz-border-radius: 50% 50% 50% 50%;\n              -webkit-border-radius: 50% 50% 50% 50%;\n              border-radius: 50% 50% 50% 50%;\n          }\n          #object_one {\n              -webkit-animation: object_one 1.5s infinite;\n              animation: object_one 1.5s infinite;\n          }\n          #object_two {\n              -webkit-animation: object_two 1.5s infinite;\n              animation: object_two 1.5s infinite;\n              -webkit-animation-delay: 0.25s;\n              animation-delay: 0.25s;\n          }\n          #object_three {\n              -webkit-animation: object_three 1.5s infinite;\n              animation: object_three 1.5s infinite;\n              -webkit-animation-delay: 0.5s;\n              animation-delay: 0.5s;\n          }\n          @-webkit-keyframes object_one {\n              75% { -webkit-transform: scale(0); }\n          }\n          @keyframes object_one {\n              75% {\n                  transform: scale(0);\n                  -webkit-transform: scale(0);\n              }\n          }\n          @-webkit-keyframes object_two {\n              75% { -webkit-transform: scale(0); }\n          }\n          @keyframes object_two {\n              75% {\n                  transform: scale(0);\n                  -webkit-transform:  scale(0);\n              }\n          }\n          @-webkit-keyframes object_three {\n              75% { -webkit-transform: scale(0); }\n          }\n          @keyframes object_three {\n              75% {\n                  transform: scale(0);\n                  -webkit-transform: scale(0);\n              }\n          }\n      }\n      //展示得分\n      .get_score{\n        width: 789px;\n        min-height: 585px;\n        background-color: #ffffff;\n        box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.35);\n        border: solid 1px #afafaf;\n        margin: 0 auto 50px;\n        padding: 0 0 30px;\n        //得分排行榜\n        .score_title{\n          height: 52px;\n          line-height: 52px;\n          background-color: #51abea;\n          color: #fff;\n          font-size: 20px;\n          font-weight: 600;\n          text-align: center;\n        }\n        //本环节得分\n        p.score_link{\n          font-size: 18px;\n          font-weight: 600;\n          color: #4a90e2;\n          height: 52px;\n          line-height: 52px;\n          text-align: center;\n        }\n        ul.score_group {\n          width: 788px;\n          min-height: 89px;\n          background-color: #f1f1f1;\n          li{\n            display: inline-block;\n            width: 25%;\n            margin-bottom: 10px;\n            text-align: center;\n            p{\n              width: 100%;\n              height: 25px;\n              font-size: 18px;\n              color: #000000;\n              margin-top: 13px;\n              margin-bottom: 14px;\n            }\n            span{\n              width: 96px;\n              height: 25px;\n              font-size: 18px;\n              color: #d0021b;\n            }\n\n          }\n        }\n        //本次演练总排名\n        h3{\n          font-size: 18px;\n          font-weight: 600;\n          text-align: center;\n          color: #4a90e2;\n          margin: 39px 0 29px;\n        }\n        .score_main{\n          display: inline-block;\n          .every_group{\n            height:50px;\n            margin-bottom: 20px;\n            margin-left: 108px;\n            img{\n              width: 40px;\n              display: inline-block;\n              vertical-align: middle;\n              margin-bottom: 10px;\n              margin-right: 20px;\n            }\n            span{\n              display: inline-block;\n              font-size: 20px;\n              color: #000000;\n              margin-right: 30px;\n              b{\n                display: inline-block;\n                width: 20px;\n                text-align: center;\n                color: #4a90e2;\n              }\n            }\n            span.bac{\n              height: 25px;\n              line-height: 25px;\n              padding-right: 10px;\n              text-align: right;\n              background-color: #9b9b9b;\n            }\n          }\n        }\n      }\n        //进度条\n        .el-progress{\n            float: left;\n            width: 250px;\n            margin-top: 12px;\n            .el-progress-bar__innerText{\n                display: none;\n            }\n        }\n      //结束演练\n      .over_drill{\n        width: 789px;\n        min-height: 400px;\n        background-color: #ffffff;\n        box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.35);\n        border: solid 1px #afafaf;\n        margin: 20px auto 50px;\n        padding: 0 0 30px;\n        .over_drill_title{\n          height: 52px;\n          line-height: 52px;\n          background-color: #51abea;\n          color: #fff;\n          font-size: 20px;\n          font-weight: 600;\n          text-align: center;\n        }\n        .the_fourth{\n          font-size: 18px;\n          font-weight: 600;\n          color: #4a90e2;\n          height: 52px;\n          line-height: 52px;\n          text-align: center;\n        }\n        .score_main{\n          display: inline-block;\n          .every_group{\n            margin-bottom: 20px;\n            height: 50px;\n            margin-left: 80px;\n            img{\n              width: 40px;\n              display: inline-block;\n              vertical-align: middle;\n              margin-bottom: 10px;\n              margin-right: 20px;\n            }\n            span{\n              display: inline-block;\n              font-size: 20px;\n              color: #000000;\n              margin-right: 20px;\n              b{\n                display: inline-block;\n                width: 20px;\n                text-align: center;\n                color: #4a90e2;\n              }\n            }\n            span.bac{\n              height: 25px;\n              line-height: 25px;\n              padding-right: 10px;\n              text-align: right;\n              background-color: #9b9b9b;\n            }\n          }\n        }\n      }\n    }\n    //zhibo\n    .video-js{\n      width: 100%;\n      height: 500px;\n      /*height: 300px;*/\n      .vjs-button.vjs-playing{\n        content: normal;\n      }\n\n      //暂停\n      .vjs-icon-pause:before{\n        content: \"\\e607\"!important;\n      }\n    }\n      .video-js .vjs-big-play-button:before, .video-js .vjs-play-control:before, .vjs-icon-play:before{\n          content: \"\"!important;\n      }\n\n      .vjs-error .vjs-error-display:before{\n          content:\"\";\n      }\n\n      .vjs-error .vjs-error-display .vjs-modal-dialog-content{\n          display:none;\n      }\n\n      .video-js .vjs-big-play-button{\n          display:none;\n      }\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/enterable/direct/DirectStart.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.$store.state.loading),expression:\"$store.state.loading\"}],staticClass:\"direct_start\",attrs:{\"element-loading-text\":_vm.loadingText}},[_c('div',{staticClass:\"direct_title\"},[_c('ul',[_vm._l((_vm.linkTitleDetail),function(item,keys){return _c('li',{key:keys,class:_vm.showTitleA == item ? 'startDirectA': ''},[_vm._v(_vm._s(item))])}),_vm._v(\" \"),(!_vm.isLastLink)?_c('li',[_vm._v(\"下一环节\")]):_vm._e(),_vm._v(\" \"),(_vm.isLastLink)?_c('li',{class:_vm.showTitleA == '结束演练' ? 'startDirectA': ''},[_vm._v(\"结束演练\")]):_vm._e()],2),_vm._v(\" \"),_c('div',[_c('el-button',{on:{\"click\":function($event){_vm.openBig()}}},[_vm._v(\"打开投影页面\")]),_vm._v(\" \"),(!_vm.end)?_c('el-button',{on:{\"click\":function($event){_vm.goNext()}}},[_vm._v(\"下一步\")]):_vm._e(),_vm._v(\" \"),(_vm.end)?_c('el-button',{on:{\"click\":function($event){_vm.downloadDrillText()}}},[_vm._v(\"下载文档\")]):_vm._e()],1)]),_vm._v(\" \"),_c('div',{staticClass:\"direct_link\"},[_c('ul',_vm._l((_vm.node),function(item,index){return _c('li',{key:index,class:[_vm.showBigTitle == index ? 'directLinkActive': '',index < _vm.showBigTitle ? 'directLinkEnd': '']},[_vm._v(_vm._s(item.name)),_c('span')])})),_vm._v(\" \"),_c('div',{staticClass:\"clock\",style:(_vm.showClock ? 'display: inline-block': 'display:none')},[_c('div',{staticClass:\"clock-box\"},[_c('i',{staticClass:\"iconfont el-icon-emergency-daojishi\"}),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.time))])])]),_vm._v(\" \"),(_vm.showRightBtn)?_c('div',{staticClass:\"referenceBtn\",style:(_vm.showRightBtn ? 'display: inline-block;': 'display: none')},[(_vm.showReference)?_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.showClick()}}},[_vm._v(\"显示参考答案\")]):_vm._e(),_vm._v(\" \"),(!_vm.showReference)?_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.hiddenClick()}}},[_vm._v(\"隐藏参考答案\")]):_vm._e()],1):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"direct_main\",style:([_vm.showTitleA == '展示得分' ? 'background-color: #fff' : 'background-color: #f1f1f1;',_vm.showTitleA == '结束演练' ? 'background-color: #fff' : 'background-color: #f1f1f1;' ])},[(_vm.showTitleA == '播放素材')?_c('div',{staticClass:\"material_play1\"},[_c('h3',[_vm._v(\"请观看素材\")]),_vm._v(\" \"),(_vm.videoMaterial == ''&&_vm.pictureMaterial == '')?_c('p',{staticClass:\"textMaterial\"},[_vm._v(_vm._s(_vm.textMaterial))]):_vm._e(),_vm._v(\" \"),(_vm.videoMaterial != '')?_c('div',{staticClass:\"play_video\"},[_c('video',{staticStyle:{\"opacity\":\"0\"},attrs:{\"id\":\"video\",\"muted\":\"\",\"controls\":\"\",\"autoplay\":\"\",\"width\":\"0\",\"height\":\"0\"},domProps:{\"muted\":true}},[_c('source',{attrs:{\"src\":_vm.$store.state.file_path + _vm.videoMaterial,\"type\":\"video/ogg\"}})]),_vm._v(\" \"),_c('video-player',{staticStyle:{\"margin-top\":\"10px\"},attrs:{\"options\":_vm.videoOptions1}})],1):_vm._e(),_vm._v(\" \"),(_vm.pictureMaterial != '')?_c('div',{staticClass:\"show_img\"},[_c('img',{attrs:{\"src\":_vm.$store.state.file_path + _vm.pictureMaterial}})]):_vm._e()]):_vm._e(),_vm._v(\" \"),(_vm.showTitleA == '播放题目'||_vm.showTitleA == '开始答题')?_c('div',{staticClass:\"subject_play\"},[_c('h3',[_vm._v(\"请阅读下列题目\")]),_vm._v(\" \"),_c('p',[_vm._v(\"本题 \"+_vm._s(_vm.subject.score)+\" 分\")]),_vm._v(\" \"),_c('div',[_vm._v(_vm._s(_vm.subject.describe))])]):_vm._e(),_vm._v(\" \"),(_vm.showTitleA == '开始答题')?_c('div',{staticStyle:{\"text-align\":\"center\",\"font-size\":\"24px\",\"color\":\"#4a4a4a\",\"margin-top\":\"20px\"}},[_c('span',{staticStyle:{\"color\":\"#f00\"}},[_vm._v(_vm._s(_vm.answerCount))]),_vm._v(\"人已经完成答题!\")]):_vm._e(),_vm._v(\" \"),(_vm.showTitleA == '开始打分')?_c('div',{staticClass:\"start_score\"},[_vm._v(\"\\n            正在打分中\\n            \"),_vm._m(0)]):_vm._e(),_vm._v(\" \"),(_vm.showTitleA == '开始打分')?_c('div',{staticStyle:{\"text-align\":\"center\",\"font-size\":\"24px\",\"color\":\"#4a4a4a\",\"font-weight\":\"500\"}},[_c('span',{staticStyle:{\"color\":\"#f00\"}},[_vm._v(_vm._s(_vm.scoreCount))]),_vm._v(\" 位评分人已经完成打分!\")]):_vm._e(),_vm._v(\" \"),(!_vm.showReference&&(_vm.showTitleA == '显示所有组答案'||_vm.showTitleA == '开始打分'))?_c('div',{staticClass:\"show_reference\",style:('border-left: 5px solid ' + _vm.liRandomColor(4))},[_c('div',{staticClass:\"reference_title\"},[_vm._v(\"参考答案\")]),_vm._v(\" \"),_c('div',{staticClass:\"reference_content\"},[_c('div',{class:_vm.showReferenceDetail ? '': 'showAllReferenceContent'},[_c('span',[_vm._v(_vm._s(_vm.subject.answer))])]),_vm._v(\" \"),(!_vm.showReferenceDetail)?_c('p',{staticClass:\"answer_detail\",on:{\"click\":function($event){_vm.showReferenceDetail = true}}},[_c('span',[_vm._v(\"显示全部详情>>\")])]):_vm._e(),_vm._v(\" \"),(_vm.showReferenceDetail)?_c('p',{staticClass:\"answer_detail\",on:{\"click\":function($event){_vm.showReferenceDetail = false}}},[_c('span',[_vm._v(\"隐藏全部详情>>\")])]):_vm._e()])]):_vm._e(),_vm._v(\" \"),(_vm.showTitleA == '显示所有组答案'||_vm.showTitleA == '开始打分')?_c('ul',{staticClass:\"all_answer\"},_vm._l((_vm.allAnswer),function(item,index){return _c('li',{key:index,style:('border-left: 5px solid ' + _vm.liRandomColor(index))},[_c('div',{staticClass:\"group_name\"},[_vm._v(_vm._s(item.name))]),_vm._v(\" \"),_c('div',{staticClass:\"answer\"},[_c('div',{class:item.show ? 'answer_roughly': ''},[_c('span',[_vm._v(_vm._s(item.answer))])]),_vm._v(\" \"),(item.show)?_c('p',{staticClass:\"answer_detail\"},[_c('span',{on:{\"click\":function($event){_vm.clickAnswerDetail(item.id,item.show)}}},[_vm._v(\"显示全部详情>>\")])]):_vm._e(),_vm._v(\" \"),(!item.show)?_c('p',{staticClass:\"answer_detail\"},[_c('span',{on:{\"click\":function($event){_vm.clickAnswerDetail(item.id,item.show)}}},[_vm._v(\"隐藏全部详情>>\")])]):_vm._e()])])})):_vm._e(),_vm._v(\" \"),(_vm.showTitleA == '开始点评')?_c('div',{staticClass:\"start_comment\"},[_c('video-player',{attrs:{\"options\":_vm.videoOptions}})],1):_vm._e(),_vm._v(\" \"),(_vm.showTitleA == '展示得分')?_c('div',{staticClass:\"get_score\"},[_c('div',{staticClass:\"score_title\"},[_vm._v(\"得分排行榜\")]),_vm._v(\" \"),_c('p',{staticClass:\"score_link\"},[_vm._v(\"本环节得分\")]),_vm._v(\" \"),_c('ul',{staticClass:\"score_group\"},_vm._l((_vm.scoreLinkGroup),function(item,index){return _c('li',{key:index},[_c('p',[_vm._v(_vm._s(item.name))]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm._f(\"markStatus\")(item.score))+\"分\")])])})),_vm._v(\" \"),_c('h3',[_vm._v(\"本次演练总排名\")]),_vm._v(\" \"),_c('div',{staticClass:\"score_main\"},_vm._l((_vm.allScoreRank),function(item,index){return _c('div',{key:index,staticClass:\"every_group\"},[_c('div',{staticStyle:{\"float\":\"left\"}},[_c('img',{attrs:{\"src\":item.src,\"alt\":\"\"}}),_vm._v(\" \"),_c('span',{staticClass:\"ranking\"},[_vm._v(\"第 \"),_c('b',[_vm._v(_vm._s(index + 1))]),_vm._v(\" 名\")]),_vm._v(\" \"),_c('span',{staticClass:\"group_name\"},[_vm._v(_vm._s(item.name))])]),_vm._v(\" \"),_c('div',{staticStyle:{\"float\":\"right\",\"width\":\"400px\"}},[_c('el-progress',{attrs:{\"text-inside\":true,\"stroke-width\":18,\"percentage\":(item.group_score/_vm.scoreTotal)*100,\"status\":\"success\"}}),_vm._v(\" \"),_c('span',{staticStyle:{\"margin-left\":\"10px\",\"margin-right\":\"0px\",\"margin-top\":\"6px\"}},[_vm._v(_vm._s(_vm._f(\"markStatus\")(item.group_score))+\"分\")])],1)])}))]):_vm._e(),_vm._v(\" \"),(_vm.showTitleA == '结束演练')?_c('div',{staticClass:\"over_drill\"},[_c('div',{staticClass:\"over_drill_title\"},[_vm._v(\"本次演练结束\")]),_vm._v(\" \"),_c('div',{staticClass:\"the_fourth\"},[_vm._v(\"前\"+_vm._s(_vm.rankIndex)+\"甲\")]),_vm._v(\" \"),_c('div',{staticClass:\"score_main\"},_vm._l((_vm.allScoreRank),function(item,index){return (index<4)?_c('div',{key:index,staticClass:\"every_group\"},[_c('div',{staticStyle:{\"float\":\"left\"}},[_c('img',{attrs:{\"src\":item.src,\"alt\":\"\"}}),_vm._v(\" \"),_c('span',{staticClass:\"ranking\"},[_vm._v(\"第 \"),_c('b',[_vm._v(_vm._s(index + 1))]),_vm._v(\" 名\")]),_vm._v(\" \"),_c('span',{staticClass:\"group_name\"},[_vm._v(_vm._s(item.name))])]),_vm._v(\" \"),_c('div',{staticStyle:{\"float\":\"right\",\"width\":\"400px\"}},[_c('el-progress',{attrs:{\"text-inside\":true,\"stroke-width\":18,\"percentage\":(item.group_score/_vm.scoreTotal)*100,\"status\":\"success\"}}),_vm._v(\" \"),_c('span',{staticStyle:{\"margin-left\":\"10px\",\"margin-right\":\"0\",\"margin-top\":\"6px\"}},[_vm._v(_vm._s(_vm._f(\"markStatus\")(item.group_score))+\"分\")])],1)]):_vm._e()}))]):_vm._e()])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"loading\"},[_c('div',{staticClass:\"object\",attrs:{\"id\":\"object_one\"}}),_vm._v(\" \"),_c('div',{staticClass:\"object\",attrs:{\"id\":\"object_two\"}}),_vm._v(\" \"),_c('div',{staticClass:\"object\",attrs:{\"id\":\"object_three\"}})])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-d1656ce2\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/enterable/direct/DirectStart.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-d1656ce2\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./DirectStart.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./DirectStart.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./DirectStart.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-d1656ce2\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./DirectStart.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/enterable/direct/DirectStart.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}